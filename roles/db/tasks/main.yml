---

- name: Install PostgreSQL
  apt: name={{ item }} update_cache={{ update_apt_cache }} state=installed
  with_items:
    - postgresql
    - postgresql-contrib
    - python-psycopg2
  tags: 
    - packages
    - postgres

- name: Ensure the PostgreSQL service is running
  service: name=postgresql state=started enabled=yes
  tags:
    - service
    - postgres

- name: Ensure database is created
  become_user: postgres
  postgresql_db: name={{ db_name }}
                 encoding='UTF-8'
                 lc_collate='en_US.UTF-8'
                 lc_ctype='en_US.UTF-8'
                 template='template0'
                 state=present
  tags: postgres

- name: Ensure user has access to the database
  become_user: postgres
  postgresql_user: db={{ db_name }}
                   name={{ db_user }}
                   password="{{ db_password }}"
                   priv=ALL
                   state=present
  tags: postgres

- name: Ensure user does not have unnecessary privileges
  become_user: postgres
  postgresql_user: name={{ db_user }}
                   role_attr_flags=NOSUPERUSER,NOCREATEDB
                   state=present
  tags: postgres

- name: Get pg_hba.conf path
  command: psql -t -P format=unaligned -c 'show hba_file'
  register: hba_file
  become_user: postgres
  tags:
    - postgres
  changed_when: False

- name: Get config file path
  command: psql -t -P format=unaligned -c 'show config_file'
  register: config_file
  become_user: postgres
  tags:
    - postgres
  changed_when: False

- name: Allow crafternodes access in hba config
  template: src=pg_hba.conf.j2
            dest="{{ hba_file['stdout'] }}"
  notify: restart postgresql
  tags:
    - postgres

- name: Listen to crafternodes adresses
  template: src=postgresql.conf.j2
            dest="{{ config_file['stdout'] }}"
  notify: restart postgresql
  tags:
    - postgres
